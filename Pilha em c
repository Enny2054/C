#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

#define TAMANHO_MAXIMO 100

// Struct da pilha
typedef struct {
    int dados[TAMANHO_MAXIMO];
    int topo;
} Pilha;

// Função para inicializar a pilha
void inicializarPilha(Pilha *p) {
    p->topo = -1;
}

// Função para verificar se a pilha está vazia
bool pilhaVazia(Pilha *p) {
    return p->topo == -1;
}

// Função para verificar se a pilha está cheia
bool pilhaCheia(Pilha *p) {
    return p->topo == TAMANHO_MAXIMO - 1;
}

// Função para empilhar um elemento
void empilhar(Pilha *p, int valor) {
    if (pilhaCheia(p)) {
        printf("Erro: pilha cheia!\n");
    } else {
        p->topo++;
        p->dados[p->topo] = valor;
        printf("Elemento %d empilhado.\n", valor);
    }
}

// Função para desempilhar um elemento
int desempilhar(Pilha *p) {
    if (pilhaVazia(p)) {
        printf("Erro: pilha vazia!\n");
        return -1;
    } else {
        int valor = p->dados[p->topo];
        p->topo--;
        printf("Elemento %d desempilhado.\n", valor);
        return valor;
    }
}

// Função para olhar o topo da pilha
int olharTopo(Pilha *p) {
    if (pilhaVazia(p)) {
        printf("Erro: pilha vazia!\n");
        return -1;
    } else {
        return p->dados[p->topo];
    }
}

// Função para limpar a tela
void limparTela() {
#ifdef _WIN32
    system("cls");
#else
    system("clear");
#endif
}

// Função principal
int main() {
    Pilha minhaPilha;
    inicializarPilha(&minhaPilha);

    int opcao;
    int valor;

    // Menu de opções e Loop principal
    while (1) {

        limparTela();
        
        printf("\n--- MENU ---\n");
        printf("1 - Empilhar\n");
        printf("2 - Desempilhar\n");
        printf("3 - Olhar topo\n");
        printf("4 - Limpar pilha\n");
        printf("5 - Sair\n");
        printf("Digite a opção desejada: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                printf("Digite o valor a empilhar: ");
                scanf("%d", &valor);
                empilhar(&minhaPilha, valor);
                break;

            case 2:
                desempilhar(&minhaPilha);
                break;

            case 3:
                valor = olharTopo(&minhaPilha);
                if (valor != -1) {
                    printf("Topo da pilha: %d\n", valor);
                } else {
                    printf("A pilha está vazia.\n");
                }
                printf("Pressione Enter para continuar...");
                getchar(); // Limpar o buffer do teclado
                getchar();
                break;

            case 4:
                inicializarPilha(&minhaPilha);
                printf("Pilha limpa com sucesso!\n");
                printf("Pressione Enter para continuar...");
                getchar(); // Limpar o buffer do teclado
                getchar();
            break;

            case 5:
                printf("Encerrando o programa...\n");
                return 0;
            
            default:
                printf("Opção inválida! Tente novamente.\n");
                getchar();
                getchar();
        }
    }

    return 0;
}
